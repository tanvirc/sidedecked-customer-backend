import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialSchema1755427495483 implements MigrationInterface {
    name = 'InitialSchema1755427495483'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "card_sets" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "gameId" uuid NOT NULL, "code" character varying(50) NOT NULL, "name" character varying(255) NOT NULL, "releaseDate" date, "setType" character varying(50), "cardCount" integer, "isDigitalOnly" boolean NOT NULL DEFAULT false, "isFoilOnly" boolean NOT NULL DEFAULT false, "hasAlternateArts" boolean NOT NULL DEFAULT false, "rotationDate" date, "isStandardLegal" boolean NOT NULL DEFAULT true, "setIconUrl" text, "setLogoUrl" text, "releasePriceAvg" numeric(10,2), "currentPriceAvg" numeric(10,2), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "game_id" uuid, CONSTRAINT "PK_f0d2e7dd04def6de3b34be736c9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "idx_sets_release_date" ON "card_sets" ("releaseDate") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_sets_game_code" ON "card_sets" ("gameId", "code") `);
        await queryRunner.query(`CREATE TABLE "catalog_skus" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "printId" uuid NOT NULL, "sku" character varying(200) NOT NULL, "gameCode" character varying(20) NOT NULL, "setCode" character varying(50) NOT NULL, "collectorNumber" character varying(50) NOT NULL, "languageCode" character varying(10) NOT NULL, "conditionCode" character varying(10) NOT NULL, "finishCode" character varying(20) NOT NULL, "isGraded" boolean NOT NULL DEFAULT false, "gradingCompany" character varying(20), "gradeValue" character varying(10), "gradeCertNumber" character varying(50), "hasB2cInventory" boolean NOT NULL DEFAULT false, "hasC2cListings" boolean NOT NULL DEFAULT false, "vendorCount" integer NOT NULL DEFAULT '0', "lowestPrice" numeric(10,2), "marketPrice" numeric(10,2), "highestPrice" numeric(10,2), "averagePrice" numeric(10,2), "medianPrice" numeric(10,2), "priceTrend" character varying(20) NOT NULL DEFAULT 'stable', "priceChangePercent" numeric(5,2), "lastPriceUpdate" TIMESTAMP, "viewCount" integer NOT NULL DEFAULT '0', "searchCount" integer NOT NULL DEFAULT '0', "cartAddCount" integer NOT NULL DEFAULT '0', "purchaseCount" integer NOT NULL DEFAULT '0', "watchlistCount" integer NOT NULL DEFAULT '0', "totalQuantityAvailable" integer NOT NULL DEFAULT '0', "lastStockUpdate" TIMESTAMP, "isActive" boolean NOT NULL DEFAULT true, "vendorSkuMappings" jsonb, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "print_id" uuid, CONSTRAINT "UQ_2497b60956e6fa3c3d4de68be5c" UNIQUE ("sku"), CONSTRAINT "PK_176cee3132988a82a97426d95de" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "idx_sku_condition" ON "catalog_skus" ("conditionCode") `);
        await queryRunner.query(`CREATE INDEX "idx_sku_price_range" ON "catalog_skus" ("lowestPrice", "highestPrice") `);
        await queryRunner.query(`CREATE INDEX "idx_sku_market" ON "catalog_skus" ("hasB2cInventory", "hasC2cListings") `);
        await queryRunner.query(`CREATE INDEX "idx_sku_components" ON "catalog_skus" ("gameCode", "setCode", "collectorNumber") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_sku_lookup" ON "catalog_skus" ("sku") `);
        await queryRunner.query(`CREATE TYPE "public"."card_images_imagetype_enum" AS ENUM('main', 'back', 'art_crop', 'border_crop', 'thumbnail', 'full')`);
        await queryRunner.query(`CREATE TYPE "public"."card_images_status_enum" AS ENUM('pending', 'processing', 'completed', 'failed', 'retry')`);
        await queryRunner.query(`CREATE TABLE "card_images" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "printId" uuid NOT NULL, "imageType" "public"."card_images_imagetype_enum" NOT NULL DEFAULT 'main', "sourceUrl" text NOT NULL, "sourceProvider" character varying(50), "storageUrls" jsonb, "blurhash" character varying(255), "cdnUrls" jsonb, "status" "public"."card_images_status_enum" NOT NULL DEFAULT 'pending', "processedAt" TIMESTAMP, "errorMessage" text, "retryCount" integer NOT NULL DEFAULT '0', "nextRetryAt" TIMESTAMP, "fileSize" integer, "width" integer, "height" integer, "format" character varying(10), "mimeType" character varying(50), "optimizationMetrics" jsonb, "sha256Hash" character varying(64), "md5Hash" character varying(32), "qualityScore" integer, "isHighRes" boolean NOT NULL DEFAULT false, "downloadCount" integer NOT NULL DEFAULT '0', "lastAccessedAt" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "print_id" uuid, CONSTRAINT "PK_402596c7513fbd3cc45750c8e16" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "idx_images_retry" ON "card_images" ("status", "retryCount") `);
        await queryRunner.query(`CREATE INDEX "idx_images_status" ON "card_images" ("status") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_images_print_type" ON "card_images" ("printId", "imageType") `);
        await queryRunner.query(`CREATE TABLE "prints" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "cardId" uuid NOT NULL, "setId" uuid NOT NULL, "printHash" character varying(64) NOT NULL, "collectorNumber" character varying(50) NOT NULL, "rarity" character varying(20), "artist" character varying(255), "flavorText" text, "language" character varying(10) NOT NULL DEFAULT 'en', "isFoilAvailable" boolean NOT NULL DEFAULT false, "isAlternateArt" boolean NOT NULL DEFAULT false, "isPromo" boolean NOT NULL DEFAULT false, "isFirstEdition" boolean NOT NULL DEFAULT false, "finish" character varying(50) NOT NULL DEFAULT 'normal', "variation" character varying(100), "frame" character varying(50), "borderColor" character varying(50), "isLegalStandard" boolean NOT NULL DEFAULT false, "isLegalPioneer" boolean NOT NULL DEFAULT false, "isLegalModern" boolean NOT NULL DEFAULT false, "isLegalLegacy" boolean NOT NULL DEFAULT false, "isLegalVintage" boolean NOT NULL DEFAULT false, "isLegalCommander" boolean NOT NULL DEFAULT false, "tcgplayerId" character varying(50), "cardmarketId" character varying(50), "scryfallId" character varying(50), "pokemonTcgId" character varying(50), "yugiohProdeckId" character varying(50), "originalPrice" numeric(10,2), "currentLowPrice" numeric(10,2), "currentMarketPrice" numeric(10,2), "currentHighPrice" numeric(10,2), "priceUpdatedAt" TIMESTAMP, "isInStock" boolean NOT NULL DEFAULT false, "totalInventory" integer NOT NULL DEFAULT '0', "imageSmall" character varying(500), "imageNormal" character varying(500), "imageLarge" character varying(500), "imageArtCrop" character varying(500), "imageBorderCrop" character varying(500), "blurhash" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "card_id" uuid, "set_id" uuid, CONSTRAINT "UQ_5152e6e03f619178b141b38ddd8" UNIQUE ("printHash"), CONSTRAINT "PK_62ab2acba5a91062c42acf48aa1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "idx_prints_artist" ON "prints" ("artist") `);
        await queryRunner.query(`CREATE INDEX "idx_prints_rarity" ON "prints" ("rarity") `);
        await queryRunner.query(`CREATE INDEX "idx_prints_set" ON "prints" ("setId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_prints_card_set_number" ON "prints" ("cardId", "setId", "collectorNumber") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_prints_hash" ON "prints" ("printHash") `);
        await queryRunner.query(`CREATE TABLE "cards" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "gameId" uuid NOT NULL, "oracleId" uuid NOT NULL, "oracleHash" character varying(64) NOT NULL, "name" character varying(500) NOT NULL, "normalizedName" character varying(500) NOT NULL, "primaryType" character varying(100), "subtypes" text array, "supertypes" text array, "powerValue" integer, "defenseValue" integer, "oracleText" text, "flavorText" text, "keywords" text array, "manaCost" character varying(100), "manaValue" integer, "colors" character varying(1) array, "colorIdentity" character varying(1) array, "hp" integer, "retreatCost" integer, "energyTypes" character varying(20) array, "evolutionStage" character varying(20), "attribute" character varying(20), "levelRank" integer, "linkValue" integer, "linkArrows" character varying(2) array, "pendulumScale" integer, "attackValue" integer, "defenseValueYugioh" integer, "cost" integer, "donCost" integer, "lifeValue" integer, "counterValue" integer, "power" integer, "extendedAttributes" jsonb NOT NULL DEFAULT '{}', "searchVector" tsvector, "popularityScore" numeric NOT NULL DEFAULT '0', "totalViews" integer NOT NULL DEFAULT '0', "totalSearches" integer NOT NULL DEFAULT '0', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "game_id" uuid, CONSTRAINT "UQ_b65c99cf34b631ea5713447d837" UNIQUE ("oracleId"), CONSTRAINT "UQ_da15324ed79513b806eab3c7cb6" UNIQUE ("oracleHash"), CONSTRAINT "PK_5f3269634705fdff4a9935860fc" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "idx_cards_colors" ON "cards" ("colors") `);
        await queryRunner.query(`CREATE INDEX "idx_cards_mana_value" ON "cards" ("manaValue") `);
        await queryRunner.query(`CREATE INDEX "idx_cards_search" ON "cards" ("normalizedName", "primaryType") `);
        await queryRunner.query(`CREATE INDEX "idx_cards_game_name" ON "cards" ("gameId", "normalizedName") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_cards_oracle_hash" ON "cards" ("oracleHash") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_cards_oracle_id" ON "cards" ("oracleId") `);
        await queryRunner.query(`CREATE TABLE "formats" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "gameId" uuid NOT NULL, "code" character varying(50) NOT NULL, "name" character varying(100) NOT NULL, "formatType" character varying(50), "isRotating" boolean NOT NULL DEFAULT false, "rotationSchedule" character varying(50), "minDeckSize" integer, "maxDeckSize" integer, "maxCopiesPerCard" integer NOT NULL DEFAULT '4', "allowsSideboard" boolean NOT NULL DEFAULT true, "maxSideboardSize" integer NOT NULL DEFAULT '15', "bannedCardTypes" text array, "requiredCardTypes" text array, "specialRules" jsonb, "isActive" boolean NOT NULL DEFAULT true, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "game_id" uuid, CONSTRAINT "PK_e99e1793fec9a30a4b463b46869" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_formats_game_code" ON "formats" ("gameId", "code") `);
        await queryRunner.query(`CREATE TABLE "games" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying(20) NOT NULL, "name" character varying(100) NOT NULL, "display_name" character varying(100) NOT NULL, "has_colors" boolean NOT NULL DEFAULT false, "has_energy_types" boolean NOT NULL DEFAULT false, "has_attributes" boolean NOT NULL DEFAULT false, "has_levels" boolean NOT NULL DEFAULT false, "has_power_toughness" boolean NOT NULL DEFAULT false, "has_evolution" boolean NOT NULL DEFAULT false, "has_life_system" boolean NOT NULL DEFAULT false, "resource_type" character varying(50), "resource_colors" jsonb, "api_provider" character varying(100), "api_endpoint" text, "api_key_required" boolean NOT NULL DEFAULT false, "update_frequency" interval NOT NULL DEFAULT '24 hours', "etl_enabled" boolean NOT NULL DEFAULT true, "etl_source" character varying(100), "last_etl_run" TIMESTAMP, "card_back_image" character varying(500), "primary_color" character varying(20), "logo_url" character varying(500), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_6048911d5f44406ad25e44eaaed" UNIQUE ("code"), CONSTRAINT "PK_c9b16b62917b5595af982d66337" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "idx_games_code" ON "games" ("code") `);
        await queryRunner.query(`CREATE TYPE "public"."etl_jobs_jobtype_enum" AS ENUM('full_sync', 'incremental_sync', 'price_update', 'image_sync', 'banlist_update', 'metadata_update')`);
        await queryRunner.query(`CREATE TYPE "public"."etl_jobs_status_enum" AS ENUM('pending', 'running', 'completed', 'failed', 'cancelled', 'partial')`);
        await queryRunner.query(`CREATE TABLE "etl_jobs" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "jobName" character varying(100) NOT NULL, "jobType" "public"."etl_jobs_jobtype_enum" NOT NULL, "gameCode" character varying(20) NOT NULL, "dataSource" character varying(100), "status" "public"."etl_jobs_status_enum" NOT NULL DEFAULT 'pending', "startedAt" TIMESTAMP, "completedAt" TIMESTAMP, "durationMs" integer, "totalRecords" integer NOT NULL DEFAULT '0', "processedRecords" integer NOT NULL DEFAULT '0', "successfulRecords" integer NOT NULL DEFAULT '0', "failedRecords" integer NOT NULL DEFAULT '0', "skippedRecords" integer NOT NULL DEFAULT '0', "progressPercent" numeric(5,2) NOT NULL DEFAULT '0', "cardsCreated" integer NOT NULL DEFAULT '0', "cardsUpdated" integer NOT NULL DEFAULT '0', "cardsDeleted" integer NOT NULL DEFAULT '0', "printsCreated" integer NOT NULL DEFAULT '0', "printsUpdated" integer NOT NULL DEFAULT '0', "imagesQueued" integer NOT NULL DEFAULT '0', "skusGenerated" integer NOT NULL DEFAULT '0', "errorMessage" text, "errors" jsonb, "retryCount" integer NOT NULL DEFAULT '0', "maxRetries" integer NOT NULL DEFAULT '5', "config" jsonb, "checkpoint" jsonb, "apiCallsCount" integer NOT NULL DEFAULT '0', "apiErrorsCount" integer NOT NULL DEFAULT '0', "apiResponseTimeAvg" numeric(10,2), "metrics" jsonb, "circuitBreakerOpen" boolean NOT NULL DEFAULT false, "circuitBreakerFailures" integer NOT NULL DEFAULT '0', "circuitBreakerResetAt" TIMESTAMP, "isScheduled" boolean NOT NULL DEFAULT false, "cronExpression" character varying(50), "nextRunAt" TIMESTAMP, "triggeredBy" character varying(100), "metadata" jsonb, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_b899a050fe53d7c147994731470" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "idx_etl_jobs_started_at" ON "etl_jobs" ("startedAt") `);
        await queryRunner.query(`CREATE INDEX "idx_etl_jobs_game_type" ON "etl_jobs" ("gameCode", "jobType") `);
        await queryRunner.query(`CREATE INDEX "idx_etl_jobs_status" ON "etl_jobs" ("status") `);
        await queryRunner.query(`CREATE TABLE "decks" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(255) NOT NULL, "userId" uuid NOT NULL, "gameId" uuid NOT NULL, "formatId" uuid, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_981894e3f8dbe5049ac59cb1af1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "deck_cards" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "deckId" uuid NOT NULL, "cardId" uuid NOT NULL, "quantity" integer NOT NULL DEFAULT '1', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_7143f21b3e36f538a75d3019f52" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_profiles" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "customerId" uuid NOT NULL, "username" character varying(100), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_4d0cffc5c56c87b3d645d56572e" UNIQUE ("customerId"), CONSTRAINT "PK_1ec6662219f4605723f1e41b6cb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_follows" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "followerId" uuid NOT NULL, "followingId" uuid NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_da8e8793113adf3015952880966" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "activities" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "userId" uuid NOT NULL, "activityType" character varying(50) NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_7f4004429f731ffb9c88eb486a8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "conversations" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_ee34f4f7ced4ec8681f26bf04ef" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "messages" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "conversationId" uuid NOT NULL, "senderId" uuid NOT NULL, "content" text NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_18325f38ae6de43878487eff986" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "forum_categories" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(255) NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_502afa07fc57ce4b302dc00217e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "forum_topics" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "title" character varying(255) NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_c3cfc62a16863804757504742b4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "forum_posts" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "content" text NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_3e9c301114a0fd42c998681b04e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_collections" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "userId" uuid NOT NULL, "printId" uuid NOT NULL, "quantity" integer NOT NULL DEFAULT '1', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_0f50c79662214ef4d0f14956980" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "price_history" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "catalog_sku" character varying(100) NOT NULL, "condition" character varying(10) NOT NULL, "language" character varying(10) NOT NULL DEFAULT 'EN', "lowest_price" numeric(10,2) NOT NULL, "average_price" numeric(10,2) NOT NULL, "highest_price" numeric(10,2) NOT NULL, "market_price" numeric(10,2) NOT NULL, "listings_count" integer NOT NULL DEFAULT '0', "in_stock_count" integer NOT NULL DEFAULT '0', "price_sources" jsonb NOT NULL, "currency" character varying(3) NOT NULL DEFAULT 'USD', "aggregation_period" character varying(20) NOT NULL DEFAULT 'daily', "recorded_at" TIMESTAMP NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_e41e25472373d4b574b153229e9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_0af87b6be9b0d66204e7d7c8e7" ON "price_history" ("catalog_sku", "condition", "language") `);
        await queryRunner.query(`CREATE INDEX "IDX_72fd1680293021df1e26260206" ON "price_history" ("catalog_sku", "recorded_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_dccf7f8b670ae4eb097c5a2d13" ON "price_history" ("catalog_sku") `);
        await queryRunner.query(`CREATE TABLE "market_prices" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "catalog_sku" character varying(100) NOT NULL, "source" character varying(50) NOT NULL, "seller_id" character varying(100), "seller_name" character varying(200), "price" numeric(10,2) NOT NULL, "shipping_cost" numeric(10,2), "condition" character varying(10) NOT NULL, "language" character varying(10) NOT NULL DEFAULT 'EN', "currency" character varying(3) NOT NULL DEFAULT 'USD', "stock_quantity" integer, "listing_url" text, "image_url" text, "is_available" boolean NOT NULL DEFAULT true, "is_foil" boolean NOT NULL DEFAULT false, "set_code" character varying(50), "card_number" character varying(20), "additional_data" jsonb, "seller_rating" integer NOT NULL DEFAULT '0', "seller_feedback_count" integer NOT NULL DEFAULT '0', "total_price" numeric(10,2), "last_scraped" TIMESTAMP NOT NULL, "last_available" TIMESTAMP, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_29696d19fd2d522d722d92f7a6c" UNIQUE ("catalog_sku", "condition", "language", "source", "seller_id"), CONSTRAINT "PK_cb959017562b6fe816d5a5c91dd" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_775f47f7d696fc952fa53fe5b5" ON "market_prices" ("last_scraped") `);
        await queryRunner.query(`CREATE INDEX "IDX_e8bd7372b24cd19278f040020a" ON "market_prices" ("catalog_sku", "source") `);
        await queryRunner.query(`CREATE INDEX "IDX_83b82cceaf469e3bafa2a5526e" ON "market_prices" ("catalog_sku", "condition", "language") `);
        await queryRunner.query(`CREATE INDEX "IDX_1d084cb0370d8c66b7150d8fc4" ON "market_prices" ("catalog_sku") `);
        await queryRunner.query(`CREATE TYPE "public"."price_alerts_alert_type_enum" AS ENUM('price_drop', 'price_target', 'back_in_stock', 'new_listing')`);
        await queryRunner.query(`CREATE TYPE "public"."price_alerts_status_enum" AS ENUM('active', 'triggered', 'paused', 'expired')`);
        await queryRunner.query(`CREATE TABLE "price_alerts" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" uuid NOT NULL, "catalog_sku" character varying(200) NOT NULL, "alert_type" "public"."price_alerts_alert_type_enum" NOT NULL DEFAULT 'price_drop', "status" "public"."price_alerts_status_enum" NOT NULL DEFAULT 'active', "trigger_price" numeric(10,2), "percentage_threshold" numeric(10,2), "condition_filter" character varying(10), "language_filter" character varying(10), "baseline_price" numeric(10,2), "last_checked_at" TIMESTAMP, "last_triggered_at" TIMESTAMP, "trigger_count" integer NOT NULL DEFAULT '0', "email_enabled" boolean NOT NULL DEFAULT true, "sms_enabled" boolean NOT NULL DEFAULT false, "push_enabled" boolean NOT NULL DEFAULT false, "expires_at" TIMESTAMP, "auto_disable_after_trigger" boolean NOT NULL DEFAULT false, "max_triggers" integer NOT NULL DEFAULT '1', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_125caf0cfa6219ed3ea03646608" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_3d62c98f5afea4ab86f71c1718" ON "price_alerts" ("trigger_price") `);
        await queryRunner.query(`CREATE INDEX "IDX_66778924cd909d1500b607a367" ON "price_alerts" ("alert_type") `);
        await queryRunner.query(`CREATE INDEX "IDX_f97dcc6e8c6d13e6462eedf652" ON "price_alerts" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_a51e13bfe053a3b07490da1881" ON "price_alerts" ("catalog_sku") `);
        await queryRunner.query(`CREATE INDEX "IDX_e935431220d8759d650a506472" ON "price_alerts" ("user_id") `);
        await queryRunner.query(`CREATE TABLE "price_predictions" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_2d00ef64145c090de6ae1f9af6d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "wishlist_items" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "wishlist_id" uuid NOT NULL, "catalog_sku" character varying(200) NOT NULL, "max_price" numeric(10,2), "preferred_condition" character varying(10), "preferred_language" character varying(10), "notes" text, "target_price" numeric(10,2), "price_when_added" numeric(10,2), "current_lowest_price" numeric(10,2), "price_alert_enabled" boolean NOT NULL DEFAULT true, "stock_alert_enabled" boolean NOT NULL DEFAULT true, "last_price_alert_sent" TIMESTAMP, "last_stock_alert_sent" TIMESTAMP, "is_available" boolean NOT NULL DEFAULT false, "availability_last_checked" TIMESTAMP, "added_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_0bd52924a97cda208ed2a07bd69" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_7b254c15b339e010c51a783e8c" ON "wishlist_items" ("wishlist_id", "catalog_sku") `);
        await queryRunner.query(`CREATE INDEX "IDX_736f33c0355a8acde764e57813" ON "wishlist_items" ("catalog_sku") `);
        await queryRunner.query(`CREATE INDEX "IDX_754a9ecec7627d432c2134dd00" ON "wishlist_items" ("wishlist_id") `);
        await queryRunner.query(`CREATE TABLE "wishlists" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" uuid NOT NULL, "name" character varying(255) NOT NULL, "description" text, "is_public" boolean NOT NULL DEFAULT false, "share_token" character varying(100), "item_count" integer NOT NULL DEFAULT '0', "total_value" numeric(10,2) NOT NULL DEFAULT '0', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_5ab1233df810af094b875b7e796" UNIQUE ("share_token"), CONSTRAINT "PK_d0a37f2848c5d268d315325f359" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_fa41010d882a54e23c1b8ef4c5" ON "wishlists" ("user_id", "name") `);
        await queryRunner.query(`CREATE INDEX "IDX_b5e6331a1a7d61c25d7a25cab8" ON "wishlists" ("user_id") `);
        await queryRunner.query(`ALTER TABLE "card_sets" ADD CONSTRAINT "FK_26a514deb65e68355d3be9e0d13" FOREIGN KEY ("game_id") REFERENCES "games"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "catalog_skus" ADD CONSTRAINT "FK_b188e8e7e5d4b6c32bd691b1f8a" FOREIGN KEY ("print_id") REFERENCES "prints"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "card_images" ADD CONSTRAINT "FK_7988683c87cc4006510bd7480ac" FOREIGN KEY ("print_id") REFERENCES "prints"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "prints" ADD CONSTRAINT "FK_e665cedfd6537c03ddc3f2cf1de" FOREIGN KEY ("card_id") REFERENCES "cards"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "prints" ADD CONSTRAINT "FK_145806444d1d59b370ae2e46dd2" FOREIGN KEY ("set_id") REFERENCES "card_sets"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "cards" ADD CONSTRAINT "FK_6afce8ac3bc3f66e8acbe87b43f" FOREIGN KEY ("game_id") REFERENCES "games"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "formats" ADD CONSTRAINT "FK_97a664a4fa5ec4aa61c8cbb86af" FOREIGN KEY ("game_id") REFERENCES "games"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "wishlist_items" ADD CONSTRAINT "FK_754a9ecec7627d432c2134dd00e" FOREIGN KEY ("wishlist_id") REFERENCES "wishlists"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "wishlist_items" DROP CONSTRAINT "FK_754a9ecec7627d432c2134dd00e"`);
        await queryRunner.query(`ALTER TABLE "formats" DROP CONSTRAINT "FK_97a664a4fa5ec4aa61c8cbb86af"`);
        await queryRunner.query(`ALTER TABLE "cards" DROP CONSTRAINT "FK_6afce8ac3bc3f66e8acbe87b43f"`);
        await queryRunner.query(`ALTER TABLE "prints" DROP CONSTRAINT "FK_145806444d1d59b370ae2e46dd2"`);
        await queryRunner.query(`ALTER TABLE "prints" DROP CONSTRAINT "FK_e665cedfd6537c03ddc3f2cf1de"`);
        await queryRunner.query(`ALTER TABLE "card_images" DROP CONSTRAINT "FK_7988683c87cc4006510bd7480ac"`);
        await queryRunner.query(`ALTER TABLE "catalog_skus" DROP CONSTRAINT "FK_b188e8e7e5d4b6c32bd691b1f8a"`);
        await queryRunner.query(`ALTER TABLE "card_sets" DROP CONSTRAINT "FK_26a514deb65e68355d3be9e0d13"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b5e6331a1a7d61c25d7a25cab8"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fa41010d882a54e23c1b8ef4c5"`);
        await queryRunner.query(`DROP TABLE "wishlists"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_754a9ecec7627d432c2134dd00"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_736f33c0355a8acde764e57813"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7b254c15b339e010c51a783e8c"`);
        await queryRunner.query(`DROP TABLE "wishlist_items"`);
        await queryRunner.query(`DROP TABLE "price_predictions"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e935431220d8759d650a506472"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a51e13bfe053a3b07490da1881"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f97dcc6e8c6d13e6462eedf652"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_66778924cd909d1500b607a367"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3d62c98f5afea4ab86f71c1718"`);
        await queryRunner.query(`DROP TABLE "price_alerts"`);
        await queryRunner.query(`DROP TYPE "public"."price_alerts_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."price_alerts_alert_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1d084cb0370d8c66b7150d8fc4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_83b82cceaf469e3bafa2a5526e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e8bd7372b24cd19278f040020a"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_775f47f7d696fc952fa53fe5b5"`);
        await queryRunner.query(`DROP TABLE "market_prices"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_dccf7f8b670ae4eb097c5a2d13"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_72fd1680293021df1e26260206"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0af87b6be9b0d66204e7d7c8e7"`);
        await queryRunner.query(`DROP TABLE "price_history"`);
        await queryRunner.query(`DROP TABLE "user_collections"`);
        await queryRunner.query(`DROP TABLE "forum_posts"`);
        await queryRunner.query(`DROP TABLE "forum_topics"`);
        await queryRunner.query(`DROP TABLE "forum_categories"`);
        await queryRunner.query(`DROP TABLE "messages"`);
        await queryRunner.query(`DROP TABLE "conversations"`);
        await queryRunner.query(`DROP TABLE "activities"`);
        await queryRunner.query(`DROP TABLE "user_follows"`);
        await queryRunner.query(`DROP TABLE "user_profiles"`);
        await queryRunner.query(`DROP TABLE "deck_cards"`);
        await queryRunner.query(`DROP TABLE "decks"`);
        await queryRunner.query(`DROP INDEX "public"."idx_etl_jobs_status"`);
        await queryRunner.query(`DROP INDEX "public"."idx_etl_jobs_game_type"`);
        await queryRunner.query(`DROP INDEX "public"."idx_etl_jobs_started_at"`);
        await queryRunner.query(`DROP TABLE "etl_jobs"`);
        await queryRunner.query(`DROP TYPE "public"."etl_jobs_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."etl_jobs_jobtype_enum"`);
        await queryRunner.query(`DROP INDEX "public"."idx_games_code"`);
        await queryRunner.query(`DROP TABLE "games"`);
        await queryRunner.query(`DROP INDEX "public"."idx_formats_game_code"`);
        await queryRunner.query(`DROP TABLE "formats"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_oracle_id"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_oracle_hash"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_game_name"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_search"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_mana_value"`);
        await queryRunner.query(`DROP INDEX "public"."idx_cards_colors"`);
        await queryRunner.query(`DROP TABLE "cards"`);
        await queryRunner.query(`DROP INDEX "public"."idx_prints_hash"`);
        await queryRunner.query(`DROP INDEX "public"."idx_prints_card_set_number"`);
        await queryRunner.query(`DROP INDEX "public"."idx_prints_set"`);
        await queryRunner.query(`DROP INDEX "public"."idx_prints_rarity"`);
        await queryRunner.query(`DROP INDEX "public"."idx_prints_artist"`);
        await queryRunner.query(`DROP TABLE "prints"`);
        await queryRunner.query(`DROP INDEX "public"."idx_images_print_type"`);
        await queryRunner.query(`DROP INDEX "public"."idx_images_status"`);
        await queryRunner.query(`DROP INDEX "public"."idx_images_retry"`);
        await queryRunner.query(`DROP TABLE "card_images"`);
        await queryRunner.query(`DROP TYPE "public"."card_images_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."card_images_imagetype_enum"`);
        await queryRunner.query(`DROP INDEX "public"."idx_sku_lookup"`);
        await queryRunner.query(`DROP INDEX "public"."idx_sku_components"`);
        await queryRunner.query(`DROP INDEX "public"."idx_sku_market"`);
        await queryRunner.query(`DROP INDEX "public"."idx_sku_price_range"`);
        await queryRunner.query(`DROP INDEX "public"."idx_sku_condition"`);
        await queryRunner.query(`DROP TABLE "catalog_skus"`);
        await queryRunner.query(`DROP INDEX "public"."idx_sets_game_code"`);
        await queryRunner.query(`DROP INDEX "public"."idx_sets_release_date"`);
        await queryRunner.query(`DROP TABLE "card_sets"`);
    }

}
